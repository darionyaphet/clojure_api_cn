clojure.core
=================

.. toctree::
   :maxdepth: 2

   ->
   ->>
   -_
   -__
   aclone
   alength
   alter-var-root
   assoc
   bigdec
   bigint
   biginteger
   comment
   comp
   compile
   complement
   concat
   cond
   conj
   cons
   constantly
   contains
   count
   counted
   declare
   defn-
   defonce
   defprotocol
   delay
   delay_p
   deref
   dissoc
   distinct
   doall
   dorun
   doseq
   empty
   even
   first
   file-seq
   filter
   fn
   future
   get
   if-let
   if-not
   import
   into
   iterate
   keep-indexed
   keep
   key
   keys
   letfn
   line-seq
   map-indexed
   map
   mapcat
   max-key
   merge
   min-key
   next
   odd
   partial
   pcalls
   pmap
   promise
   pvalues
   range
   re-seq
   realized
   reduce
   reductions
   remove
   repeat
   repeatedly
   reverse
   rseq
   rsubseq
   seq
   shuffle
   some
   sort
   subseq
   time
   tree-seq
   vals
   when-let
   when-not
   with-open
   xml-seq
   zipmap
